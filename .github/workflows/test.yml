name: test

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 5 * * *"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        jupyter-version: ["5.6", "5.7", "5.*", "6.0", "6.1", "6.2", "6.3", "6.*"]

    # Can't use Minio official image because we can't specify the docker command in Github Actions
    # https://github.community/t5/GitHub-Actions/Job-service-command/m-p/33901
    # https://github.community/t5/GitHub-Actions/Specify-command-in-job-service-container/m-p/40616
    services:
      minio:
        image: getfider/minio:0.0.2
        # image: minio/minio:RELEASE.2018-06-29T02-11-29Z
        # command: server /export
        ports:
          - 9000:9000
          - 9001:9001
        env:
          MINIO_ACCESS_KEY: access-key
          MINIO_SECRET_KEY: secret-key
        volumes:
          - /tmp/tmp-data:/data

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

     # ------------------------------------------------------------------------
      # Python

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.0a2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-python-env
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-py${{ matrix.python-version }}-jp${{ matrix.jupyter-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        id: cache-reset
        continue-on-error: true
        if: steps.cached-python-env.outputs.cache-hit == 'true'
        run: poetry run python --version

      - name: Install Python dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true' || steps.cache-reset.conclusion != 'success'
        run: |
          rm -rf .venv || true
          poetry install --no-interaction --no-root --with test
          source .venv/bin/activate
          pip install -U notebook==${{ matrix.jupyter-version }}

      - name: Print Python info
        run: |
          source .venv/bin/activate
          which python
          python --version
          which pip
          pip --version
          pip freeze

      - name: Print Jupyter info
        run: |
          source .venv/bin/activate
          pip freeze | grep notebook

      # ------------------------------------------------------------------------
      # Test

      - name: Verify Minio
        run: |
          sudo mkdir -p /tmp/tmp-data/notebooks
          curl http://localhost:9000/

      - name: Build package
        run: |
          source .venv/bin/activate
          make all

      - name: Install package
        run: |
          source .venv/bin/activate
          pip install dist/*.tar.gz
          pip freeze

      - name: Run tests
        run: |
          source .venv/bin/activate
          make test-all
          make report

      - name: Upload package
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pkg-py${{ matrix.python-version }}
          path: dist

      - name: Upload test restuls
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-results-py${{ matrix.python-version }}
          path: htmlcov

      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
